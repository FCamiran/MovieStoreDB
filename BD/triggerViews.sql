--TRIGGER

--NÃO PERMITIR EXCLUSÃO DE VENDA
  CREATE OR REPLACE TRIGGER TG_DETELE_VENDA
  BEFORE DELETE ON TB_VENDA
  FOR EACH ROW
  BEGIN
    RAISE_APPLICATION_ERROR(-20001, 'ERRO: EXCLUSÃO NÃO PERMITIDA');
  END; 
  
  --TESTE
  DELETE 
  FROM TB_VENDA
  WHERE VEND_ID = 2;
  
  --CONFERIR
  SELECT * FROM TB_VENDA;
  
  
  --VIEWs
  
  --RELATORIO DE VENDAS
  CREATE OR REPLACE VIEW VW_RELATORIO_VENDAS
  AS
    SELECT
      CLI.CLI_NOME AS NOME_CLIENTE,
      FUN.FUN_NOME AS NOME_FUNCIONARIO,
      FIL.FIL_NOME AS NOME_FILME,
      VF.VF_VALOR AS VALOR_FILME,
      VEN.VEND_DATA AS DATA_VENDA
  FROM
      TB_VENDA VEN
  INNER JOIN
      TB_CLIENTE CLI ON VEN.VEND_CLI_ID = CLI.CLI_ID
  INNER JOIN
      TB_FUNCIONARIO FUN ON VEN.VEND_FUN_ID = FUN.FUN_ID
  INNER JOIN
     TB_VENDA_FILME VF ON VEN.VEND_ID = VF.VEND_ID
  INNER JOIN
      TB_FILME FIL ON VF.FIL_ID = FIL.FIL_ID
  ORDER BY
     VEN.VEND_DATA DESC;
   
  --TESTE     
 SELECT * FROM VW_RELATORIO_VENDAS;
      
  --RELATORIO DE FILMES
  
   CREATE OR REPLACE VIEW VW_RELATORIO_FILMES AS
     SELECT
        FIL.FIL_NOME AS FILME,
        GE.GEN_DESCRICAO AS GENERO,
        TRUNC(FIL.FIL_TEMP / 60) || ' hora(s) e ' || MOD(FIL.FIL_TEMP, 60) || ' minutos' AS DURACAO_TOTAL,
        FIL.FIL_QUANT AS ESTOQUE
      FROM
        TB_FILME FIL
      INNER JOIN
        TB_GENERO GE ON FIL.FIL_CODGENERO = GE.GEN_ID
      ORDER BY
        GE.GEN_DESCRICAO;
    
   --TESTE       
  SELECT * FROM VW_RELATORIO_FILMES;
  